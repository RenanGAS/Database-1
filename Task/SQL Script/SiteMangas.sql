# CREATE DATABASE SiteMangas;
# USE SiteMangas;

# DROP TABLE IF EXISTS AUTOR_TEM_MANGA, MANGA_PERTENCE_CATEGORIA, SCANLATOR_EDITA_MANGA, SCANLATOR_POSSUI_REDESOCIAL, SCANLATOR_TRADUZ_CAPITULO, USUARIO_ACESSA_MANGA, COMENTARIO, USUARIO_LE_CAPITULO;
# DROP TABLE IF EXISTS SITUACAO, MANGA, AUTOR, CATEGORIA, SCANLATOR, REDESOCIAL, CAPITULO, USUARIO, ESTADO, NOTA, AVALIACAO;

CREATE TABLE SITUACAO(
    ID INTEGER AUTO_INCREMENT,
    Nome CHAR(20),
    Imagem CHAR(50),
    PRIMARY KEY(ID)
);

CREATE TABLE MANGA(
    ID INTEGER AUTO_INCREMENT,
    Nome CHAR(50),
    Imagem CHAR(50),
    ID_Situacao INTEGER NOT NULL,
    PRIMARY KEY(ID),
    FOREIGN KEY(ID_Situacao) REFERENCES SITUACAO(ID)
);

CREATE TABLE AUTOR(
    ID INTEGER AUTO_INCREMENT,
    Nome CHAR(20),
    Nacionalidade CHAR(20),
    PRIMARY KEY(ID)
);

CREATE TABLE AUTOR_TEM_MANGA(
    ID_Autor INTEGER,
    ID_Manga INTEGER,
    NumeroMangas INTEGER,
    PRIMARY KEY(ID_Autor, ID_Manga),
    FOREIGN KEY(ID_Autor) REFERENCES AUTOR(ID),
    FOREIGN KEY(ID_Manga) REFERENCES MANGA(ID)
);

CREATE TABLE CATEGORIA(
    ID INTEGER AUTO_INCREMENT,
    Nome CHAR(20),
    Imagem CHAR(50),
    PRIMARY KEY(ID)
);

CREATE TABLE MANGA_PERTENCE_CATEGORIA(
    ID_Manga INTEGER,
    ID_Categoria INTEGER,
    NumeroMangas INTEGER,
    PRIMARY KEY(ID_Manga, ID_Categoria),
    FOREIGN KEY(ID_Manga) REFERENCES MANGA(ID),
    FOREIGN KEY(ID_Categoria) REFERENCES CATEGORIA(ID)
);

CREATE TABLE SCANLATOR(
    ID INTEGER AUTO_INCREMENT,
    Nome CHAR(20),
    Imagem CHAR(50),
    PRIMARY KEY(ID)
);

CREATE TABLE REDESOCIAL(
    ID INTEGER AUTO_INCREMENT,
    Nome CHAR(20),
    Imagem CHAR(50),
    PRIMARY KEY(ID)
);

CREATE TABLE SCANLATOR_EDITA_MANGA(
    ID_Scanlator INTEGER,
    ID_Manga INTEGER,
    NumeroMangas INTEGER,
    PRIMARY KEY(ID_Scanlator, ID_Manga),
    FOREIGN KEY(ID_Scanlator) REFERENCES SCANLATOR(ID),
    FOREIGN KEY(ID_Manga) REFERENCES MANGA(ID)
);

CREATE TABLE SCANLATOR_POSSUI_REDESOCIAL(
    ID_Scanlator INTEGER,
    ID_RedeSocial INTEGER,
    PRIMARY KEY(ID_Scanlator, ID_RedeSocial),
    FOREIGN KEY(ID_Scanlator) REFERENCES SCANLATOR(ID),
    FOREIGN KEY(ID_RedeSocial) REFERENCES REDESOCIAL(ID)
);

CREATE TABLE CAPITULO(
    ID INTEGER AUTO_INCREMENT,
    Titulo CHAR(50),
    NumeroPaginas INTEGER,
    DataLancamento DATE,
    ID_Manga INTEGER NOT NULL,
    PRIMARY KEY(ID),
    FOREIGN KEY(ID_Manga) REFERENCES MANGA(ID)
);

CREATE TABLE SCANLATOR_TRADUZ_CAPITULO(
    ID_Scanlator INTEGER,
    ID_Capitulo INTEGER,
    PRIMARY KEY(ID_Scanlator, ID_Capitulo),
    FOREIGN KEY(ID_Scanlator) REFERENCES SCANLATOR(ID),
    FOREIGN KEY(ID_Capitulo) REFERENCES CAPITULO(ID)
);

CREATE TABLE USUARIO(
    ID INTEGER AUTO_INCREMENT,
    Nickname CHAR(30) UNIQUE NOT NULL,
    Email CHAR(50) UNIQUE NOT NULL,
    Senha CHAR(30) NOT NULL,
    PRIMARY KEY(ID)
);

CREATE TABLE ESTADO(
    ID INTEGER AUTO_INCREMENT,
    Nome CHAR(20),
    Imagem CHAR(50),
    PRIMARY KEY(ID)
);

CREATE TABLE NOTA(
    ID INTEGER AUTO_INCREMENT,
    Numero INTEGER,
    PRIMARY KEY(ID)
);

CREATE TABLE USUARIO_ACESSA_MANGA(
    ID_Usuario INTEGER,
    ID_Manga INTEGER,
    ID_Estado INTEGER NOT NULL,
    ID_Nota INTEGER,
    PRIMARY KEY(ID_Usuario, ID_Manga),
    FOREIGN KEY(ID_Usuario) REFERENCES USUARIO(ID),
    FOREIGN KEY(ID_Manga) REFERENCES MANGA(ID),
    FOREIGN KEY(ID_Estado) REFERENCES ESTADO(ID),
    FOREIGN KEY(ID_Nota) REFERENCES NOTA(ID)
);

CREATE TABLE AVALIACAO(
    ID INTEGER AUTO_INCREMENT,
    Like_ BOOLEAN,
    Dislike BOOLEAN,
    PRIMARY KEY(ID)
);

CREATE TABLE USUARIO_LE_CAPITULO(
    ID_Usuario INTEGER,
    ID_Capitulo INTEGER,
    ID_Avaliacao INTEGER,
    PRIMARY KEY(ID_Usuario, ID_Capitulo),
    FOREIGN KEY(ID_Usuario) REFERENCES USUARIO(ID),
    FOREIGN KEY(ID_Capitulo) REFERENCES CAPITULO(ID),
    FOREIGN KEY(ID_Avaliacao) REFERENCES AVALIACAO(ID)
);

CREATE TABLE COMENTARIO(
    ID INTEGER AUTO_INCREMENT,
    Mensagem TEXT,
    NumeroVotos INTEGER,
    DataPublicacao DATE,
    ID_Usuario_UsuarioLeCapitulo INTEGER,
    ID_Capitulo_UsuarioLeCapitulo INTEGER,
    PRIMARY KEY(ID, ID_Usuario_UsuarioLeCapitulo, ID_Capitulo_UsuarioLeCapitulo),
    FOREIGN KEY(ID_Usuario_UsuarioLeCapitulo, ID_Capitulo_UsuarioLeCapitulo) REFERENCES USUARIO_LE_CAPITULO(ID_Usuario, ID_Capitulo) ON DELETE CASCADE
);